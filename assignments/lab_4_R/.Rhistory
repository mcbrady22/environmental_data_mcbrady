rnorm(30)
norm_17 <- rnorm(n = 17, mean = 10.4, sd = 2.4)
norm_17
norm_17 <- rnorm(n = 17, mean = 10.4, sd = 2.4)
norm_30 <- rnorm(n = 30, mean = 10.4, sd = 2.4)
norm_300 <- rnorm(n = 300, mean = 10.4, sd = 2.4)
norm_3000 <- rnorm(n = 3000, mean = 10.4, sd = 2.4)
par(mfrow=c(2,2))
hist(norm_17)
hist(norm_30)
hist(norm_300)
hist(norm_3000)
par(mfrow=c(2,2))
hist(norm_17, main = "17 Random Numbers", xlab = "Number", ylab = "Frequency")
hist(norm_30, main = "30 Random Numbers", xlab = "Number", ylab = "Frequency)
hist(norm_300, main = "300 Random Number", xlab = "Number", ylab = "Frequency)
hist(norm_3000, main = "3000 Random Numbers", xlab = "Number", ylab = "Frequency)
jvh
kjb
jhcggj
function()
function(a)
hist(norm_30, main = "30 Random Numbers", xlab = "Number", ylab = "Frequency)
hist(norm_30, main = "30 Random Numbers", xlab = "Number", ylab = "Frequency)
function(a)
hist(u)
hist(norm_30, main = "30 Random Numbers", xlab = "Number", ylab = "Frequency)
par(mfrow=c(2,2))
hist(norm_17, main = "17 Random Numbers")
hist(norm_30, main = "30 Random Numbers")
hist(norm_300, main = "300 Random Numbers")
hist(norm_3000, main = "3000 Random Numbers")
png(filename = "lab_04_hist_01.png")
jpeg(filename = "hist.jpeg")
png(filename = "lab_04_hist_01.png")
hist(
qsec ~ cyl,
data = norm_17,
xlab = "Numbers",
ylab = "Frequency",
main = "17 Random Numbers")
dev.off()
png(filename = "lab_04_hist_01.png")
hist(
+     data = norm_17,
+     main = "17 Random Numbers")
png(filename = "lab_04_hist_01.png")
> hist(
+data = norm_17,
+main = ("17 Random Numbers"))
png(
filename = ("lab_04_hist_01.png"),
width = 1500, height = 1600,
res = 180, units = "dpi")
png(
+     filename = ("lab_04_hist_01.png"),
+     width = 1500, height = 1600,
+     res = 0.141111, units = "mm")
png(+     filename = ("lab_04_hist_01.png"),
+     width = 1500, height = 1600,
+     res = 180, units = "dpi")
png(+     filename = ("lab_04_hist_01.png"),
+     width = 1500, height = 1600,
+     res = 180, units = "dpi")
png(
+     filename = ("lab_04_hist_01.png"),
+     width = 1500, height = 1600,
+     res = 0.1411111, units = "mm")
require(here)
png(
filename = here("mtcars_boxplot_hi_res.png"),
width = 1200, height = 900,
res = 120, units = "px")
require(here)
png(
filename = here("lab_04_hist_01.png"),
width = 1500, height = 1600,
res = 70.866, units = "px")
par(mfrow=c(1,1))
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-6, 6))
abline(h = 0)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-6, 6))
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-6, 6))
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-3, 3))
abline(h = 0)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-3, 3))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-6, 6))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", mean = 10.4, sd = 2.4, type = "l", xlim = c(-3, 3))
abline(h = 0)
plot(x, y, main = "Standard Normal PDF", mean = 10.4, sd = 2.4, type = "l", xlim = c(-3, 3))
x = seq(-6, 6, length.out = 1000)
y = norm(x)
plot(x, y, main = "Standard Normal PDF", mean = 10.4, sd = 2.4, type = "l", xlim = c(-3, 3))
abline(h = 0)
dev.off()
warnings()
x = seq(-6, 6, length.out = 1000)
y = norm(x)
plot(x, y, main = "Standard Normal PDF", mean = 10.4, sd = 2.4, type = "l", xlim = c(0, 18))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = rnorm(x)
plot(x, y, main = "Standard Normal PDF", mean = 10.4, sd = 2.4, type = "l", xlim = c(0, 18))
abline(h = 0)
warnings()
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(0, 18), mean = 10.4, sd = 2.4)
warnings()
norm_bell <- rnorm(n = 1000, mean = 10.4, sd = 2.4)
plot(norm_bell)
plot(x = norm_bell, y = norm(x))
plot(x = norm_bell, y = norm(1000))
plot(x, y = norm_bell)
norm_bell <- rnorm(n = 1000, mean = 10.4, sd = 2.4)
plot(norm_bell)
plot(x = norm_bell, y = norm(x))
plot(x = norm_bell, y = norm(1000))
plot(norm_bell)
rnorm(norm_bell)
plot(rnorm(norm_bell))
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-3, 3))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(4, 18))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(-3, 3))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x, 10.4, 2.4)
plot(x, y, main = "Standard Normal PDF", type = , xlim = c(4, 18))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x, 10.4, 2.4)
plot(x, y, main = "Standard Normal PDF", type = "l", xlim = c(4, 18))
abline(h = 0)
x = seq(-6, 6, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
x = seq(4, 18, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
x = seq(-20, 20, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
x = seq(4, 18, length.out = 100000)
y = dnorm(x)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
x = seq(-20, 20, length.out = 1000)
y = dnorm(x)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
x = seq(-20, 20, length.out = 1000)
y = dnorm(x, 10.4, 2.4)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
svg(filename = here("norm_1.svg"), width = 1500, height = 1600, res = 70.866, units = "px")
svg(filename = here("norm_1.svg"), width = 1500, height = 1600)
svg(filename = "norm_1.svg", width = 1500, height = 1600, res = 70.866, units = "px")
svg(filename = "norm_1.svg", width = 1500, height = 1600)
jpeg(filename = "norm_1.jpeg", width = 1500, height = 1600)
n_pts = 10
x_min = 1
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
plot(dat)
View(dat)
n_pts = 25
x_min = 0
x_max = 25
x = rnorm(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
n_pts = 10
x_min = 1
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
plot(x, y)
n_pts = 10
x_min = 1
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
plot(x, y_observed)
n_pts = 25
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
x <- seq(-10, 10, by = .1)
y <- dnorm(x)
png(file = "dnorm.png")
plot(x,y)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
x <- seq(-10, 10, by = .1)
y <- dnorm(x, mean = 2.5, sd = 0.5)
plot(x,y)
dev.off()
x <- n_pts
y <- dnorm(x, mean = 2.5, sd = 0.5)
plot(x,y)
plot(dat)
dev.off()
n_pts = 10
x_min = 1
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
plot(dat)
n_pts = 100
x_min = 0
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
plot(dat)
par(mfrow=c(2,2))
n_pts = 100
x_min = 0
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
plot(dat)
hist(dat)
hist(x,y)
hist(dat, breaks = 10)
hist(x)
hist(y)
boxplot(dat)
pdf(filename = "random_numbers_pdf.pdf", width = 1500, height = 1600)
pdf(filename = ("random_numbers_pdf.pdf"), width = 1500, height = 1600)
pdf((filename = ("random_numbers_pdf.pdf")), width = 1500, height = 1600)
plot(dat, main = "Scatterplot of Random Points", col = cyan 3)
plot(dat, main = "Scatterplot of Random Points", col = "cyan 3")
dev.off()
dev.off9
dev.off()
par(mfrow=c(2,2))
plot(dat, main = "Scatterplot of Random Points", col = "dodgerblue1")
hist(x, main = "Histogram of Random Variable x", col = "dodgerblue2")
hist(y, main = "Histogram of Variable y based on Normal Distribution of x", col = "dodgerblue3")
boxplot(dat, main = "Boxplot of Random Variables x and y", col = "dodgerblue4")
par(mfrow=c(2,2))
plot(dat, main = "Scatterplot of Random Points", col = "dodgerblue1")
hist(x, main = "Histogram of Random Variable x", col = "dodgerblue2")
hist(y, main = "Histogram of Variable y \nbased on Normal Distribution of x", col = "dodgerblue3")
boxplot(dat, main = "Boxplot of Random Variables x and y", col = "dodgerblue4")
dev.off()
par(mfrow=c(1,1))
plot(dat)
plot(dat, main = "Scatterplot of Random Points", col = "indianred2")
plot(dat, main = "Scatterplot of Random Points", bg = "indianred2")
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "indianred2")
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
line_point_slope(x,1.8,0.5,-0.27)
plot(line_point_slope)
plot(line_point_slope(x,1.8,0.5,-0.27))
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "indianred2")
plot(line_point_slope(x,1.8,0.5,-0.27))
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "indianred2")
curve(line_point_slope(x, 1.8, 0.5, -0.27))
dev.off()
dev.off()
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "indianred2")
curve(line_point_slope(x, 1.8, 0.5, -0.27))
line(line_point_slope(x, 1.8, 0.5, -0.27))
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "indianred2")
line(line_point_slope(x, 1.8, 0.5, -0.27))
plot(line(line_point_slope(x, 1.8, 0.5, -0.27)))
plot(line_point_slope(x, 1.8, 0.5, -0.27))
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "indianred2")
line_point_slope(x, 1.8, 0.5, -0.27)
plot(line_point_slope)
redline <- line_point_slope(x, 1.8, 0.5, -0.27)
plot(redline)
n = 17
slope = 0.7
intcp = 0.2
guess_x = 6
guess_y = 4
guess_slope = 0.72
x = runif(n = n, min = 1, max = 10)
y = rnorm(n = n, mean = slope * x + intcp)
plot(x, y, pch = 16)
curve(line_point_slope(x, guess_x, guess_y, guess_slope), add = T)
n_pts = 100
x_min = 0
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
plot(dat)
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
line_point_slope(x, 1.8, 0.5, -0.27)
get_y_intercept(1.8, 0.5, -0.27)
line_point_slope(0, 1.8, 0.5, -0.27)
curve(line_point_slope(0, 1.8, 0.5, -0.27))
curve(line_point_slope)
curve(line_point_slope)
plot(1,2)
