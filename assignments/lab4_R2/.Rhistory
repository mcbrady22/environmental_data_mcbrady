n_pts = 100
> x_min = 0
> x_max = 10
> x = runif(n = n_pts, min = x_min, max = x_max)
> dat = data.frame(x = x, y_observed = rnorm(n_pts))
n_pts = 100
x_min = 0
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
plot(dat, main = "Scatterplot of Random Points", col = "dodgerblue1")
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "dodgerblue1")
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
plot(line_point_slope(0, 1.8, 0.5, -0.27))
line_point_slope(0, 1.8, 0.5, -0.27)
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27))
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "dodgerblue1")
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27))
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "dodgerblue1")
+curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27))
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "dodgerblue1")
+ curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27))
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27), col = "indianred3")
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "dodgerblue1")
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27),  col = “indianred3”, lwd = 2, add = TRUE)
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27),  col = “red”, add = TRUE)
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27), lwd = 2, add = TRUE)
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27), lwd = 2, col = "red", add = TRUE)
pdf((filename = ("scat_of_random_plusline_pdf.pdf")), width = 1500, height = 1600)
line_point_slope(dat$x, 1.8, 0.5, -0.27)
y_predicted <- line_point_slope(dat$x, 1.8, 0.5, -0.27)
dat.tab <- (dat, y_predicted)
dat.tab <- data.table(dat, y_predicted)
dat.tab <- data.table(dat$x, dat$y_observed, y_predicted)
dat.tab <- data.frame(dat$x, dat$y_observed, y_predicted)
View(dat.tab)
residuals = y_observed - y_predicted
residuals <- sum(dat$y_observed - y_predicted)
residuals <- dat$y_observed - y_predicted
dat.tab <- data.frame(dat$x, dat$y_observed, y_predicted, residuals)
View(dat.tab)
View(dat.tab)
hist(residuals, col - "cyan3")
hist(residuals, main = "Residual Values from Randomly n\Generated Points", xlab = "Residual Value" ylab = "Frequency", col = "cyan3")
hist(residuals, main = "Residual Values from Randomly n\Generated Points", xlab = "Residual Value" ylab = "Frequency", col = "cyan3")
hist(residuals, main = "Residual Values from Randomly Generated Points", xlab = "Residual Value" ylab = "Frequency", col = "cyan3")
hist(residuals, main = "Residual Values from Randomly Generated Points", xlab = "Residual Value", ylab = "Frequency", col = "cyan3")
dev.off()
dev.off()
hist(residuals, main = "Residual Values from Randomly Generated Points", xlab = "Residual Value", ylab = "Frequency", col = "cyan3")
hist(residuals, main = "Residual Values from Randomly Generated Points", breaks = 0.5-0.5, xlab = "Residual Value", ylab = "Frequency", col = "cyan3")
hist(residuals, main = "Residual Values from Randomly Generated Points", breaks = 0.5, xlab = "Residual Value", ylab = "Frequency", col = "cyan3")
plot(y_predicted, residuals)
plot(y_predicted, residuals, main = "Predicted Values of y vs. Residual Values", xlab = "y predicted", ylab = "residual values", col = "green2")
svg(filename = "norm_1.svg", width = 1500, height = 1600)
x = seq(-20, 20, length.out = 1000)
y = dnorm(x, 10.4, 2.4)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
svg(filename = "norm_1.svg", width = 1500, height = 1600)
x = seq(-20, 20, length.out = 1000)
y = dnorm(x, 10.4, 2.4)
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
dev.off()
dev.off()
dev.off()
plot(x, y, main = "Normal PDF: mean = 10.4, s.d. = 2.4", type = "l", xlim = c(4, 18), ylim = c(0,0.2))
abline(h = 0)
svg(filename = "norm_1.svg", width = 1500, height = 1600)
pdf(filename = "norm_1.pdf", width = 1500, height = 1600)
pdf(filename = "norm_1", width = 1500, height = 1600)
svg(filename = here("norm_1.svg"), width = 1500, height = 1600)
pdf(file = here("norm_1"), width = 1500, height = 1600)
pdf(file = "norm_1.pdf", width = 1500, height = 1600)
n_pts = 100
x_min = 0
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
par(mfrow=c(2,2))
plot(dat, main = "Scatterplot of Random Points", col = "dodgerblue1")
hist(x, main = "Histogram of Random Variable x", col = "dodgerblue2")
hist(y, main = "Histogram of Variable y \nbased on Normal Distribution of x", col = "dodgerblue3")
boxplot(dat, main = "Boxplot of Random Variables x and y", col = "dodgerblue4")
pdf(file = ("random_numbers.pdf"), width = 1500, height = 1600)
n_pts = 100
x_min = 0
x_max = 10
x = runif(n = n_pts, min = x_min, max = x_max)
dat = data.frame(x = x, y_observed = rnorm(n_pts))
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
plot(dat, main = "Scatterplot of Random Points", pch = 19, col = "dodgerblue1")
curve(line_point_slope(x, x1 = 1.8, y1 = 0.5, slope = -0.27), lwd = 2, col = "red", add = TRUE)
pdf(file = ("scat_of_random_plusline_pdf.pdf"), width = 1500, height = 1600)
