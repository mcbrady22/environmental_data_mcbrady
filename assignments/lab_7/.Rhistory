View(penguins)
load("C:/Users/madis/Desktop/environmental_data/environmental_data/assignments/lab6/.RData")
penguins
load("C:/Users/madis/Desktop/environmental_data/environmental_data/assignments/lab6/.RData")
View(penguins)
download(penguins)
library(readr)
penguins <- read_csv("penguins.csv")
View(penguins)
penguin_data <- na.omit(penguins)
View(penguins)
View(penguin_data)
billength <- peguin_data$bill_length_mm
billength <- penguin_data$bill_length_mm
gentoobill <- penguin_data$bill_length_mm ~ penguin_data$species$gentoo
gentoobill <- c(penguin_data$bill_length_mm ~ penguin_data$species$gentoo)
View(gentoobill)
gentoobill <- (penguin_data$bill_length_mm ~ penguin_data$species$gentoo)
View(penguin_data)
View(gentoobill)
billspecies <- (penguin_data$bill_length_mm ~ penguin_data$species)
billspecies <- data.frame(penguin_data$specie, penguin_data$bill_length_mm)
billspecies <- data.frame(penguin_data$species, penguin_data$bill_length_mm)
View(billspecies)
split(billspecies, species)
split(billspecies, "species")
byspecies <- split(billspecies, "species")
View(byspecies)
byspecies[["species"]][["penguin_data.species"]]
byspecies <- strsplit(billspecies, "species")
byspecies <- split.data.frame(billspecies, "species")
View(byspecies)
View(byspecies)
byspecies[["species"]][["penguin_data.bill_length_mm"]]
byspecies = droplevels(subset(billspecies, species != "Adelie"))
View(billspecies)
byspecies = droplevels(subset(billspecies, penguin_data.species != "Adelie"))
gentoobill = droplevels(subset(byspecies, penguin_data.species != "Chinstrap"))
View(gentoobill)
gentoo.dat <- gentoobill$penguin_data.bill_length_mm
m = 10000
result = numeric(m)
head(result)
for(i in 1:m)
{
result[i] = mean(sample(gentoo.dat, replace=TRUE))
}
mean(result)
quantile(result,c(0.025,0.975))
sse_mean = function(x)
{y = na.omit(x)
sse = ((sd(y))/(sqrt(length(y))))
return(sse)}
sse_mean(gentoo.dat)
1.96*0.2847372
mean(gentoo.dat)
na.omit(penguins)
penguin_data <- na.omit(penguins)
bill_length <- data.frame(penguin_data$species, penguin_data$bill_length_mm)
adele_and_gentoo <- droplevels(subset(bill_length, “penguin_data$species” != "Chinstrap"))
gentoo.dat <- droplevels(subset(bill_length, “penguin_data$species” != "Adelie"))
length(gentoo.dat)
penguin_data <- na.omit(penguins)
bill_length <- data.frame(penguin_data$species, penguin_data$bill_length_mm)
adele_and_gentoo <- droplevels(subset(bill_length, “penguin_data$species” != "Chinstrap"))
View(bill_length)
adele_and_gentoo <- droplevels(subset(bill_length, “penguin_data.species” != "Chinstrap"))
adele_and_gentoo <- droplevels(subset(bill_length, penguin_data.species != "Chinstrap"))
gentoo.dat <- droplevels(subset(bill_length, penguin_data.species != "Adelie"))
length(gentoo.dat)
View(gentoo.dat)
gentoo <- gentoo.dat$penguin_data.bill_length_mm
length(gentoo)
sd(gentoo.dat)
sd(gentoo)
qt(0.05, 1)
qt(p=.05/2, df=1, lower.tail=FALSE)
qt(p=.05/2, df=187, lower.tail=FALSE)
mean(gentoo)
sse_mean(gentoo)
0.2370734*1.972731
sse_mean(gentoo)
library(readr)
moths <- read_csv("moths.csv")
View(moths)
moth_dat = moths[,-1]
head(moth_dat)
library(readr)
moths <- read_csv("moths.csv")
View(moths)
moth_dat = moths[,-1]
head(moth_dat)
n = nrow(moth_dat)
m = 10000
moth_result = matrix(
nrow = m,
ncol = n)
for(i in 1:m)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = moth_dat[rows_j, ]
t2 = apply(t1, 2, sum)
moth_result[i, j] = sum(t2 > 0)
}
}
head(moth_result)
)
head(moth_result)
head(moth_result)
> head(moth_result)
> #
#
))))
>)))}}}}
rarefaction_sampler = function(input_dat, n_iterations)
{n_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}}
return(results_out)}
rarefaction_sampler(moth_dat, 10000)
rarefaction_sampler = function(input_dat, n_iterations)
{n_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}}
return(results_out)}
rarefaction_sampler(moth_dat, 10000)
moths<-rarefaction_sampler(moth_dat, 10000)
moths
rarefact = rarefaction_sampler(moths[,-1], 10000)
rarefact
View(rarefact)
rarefact <- rarefaction_sampler(moths[,-1], 10000)
rarefact
moths <- rarefaction_sampler(moth_dat, 10000)
moths
rare_mean = apply(rarefact, 2, mean)
rare_quant = apply(rarefact, 2, quantile, probs=c(0.025, 0.975))
rare = t(rbind(rare_mean, rare_quant))
rarefact <- rarefaction_sampler(moth_dat, 10000)
rarefact <- rarefaction_sampler(moth_dat, 10000)
rarefact <- rarefaction_sampler(moth_dat, 10000)
moths <- rarefaction_sampler(moth_dat, 10000)
rare_mean = apply(moths, 2, mean)
rare_quant = apply(moths, 2, quantile, probs=c(0.025, 0.975))
rare = t(rbind(rare_mean, rare_quant))
matplot(
rare,
type='l',
xlab='Number of sampling plots',
ylab='Species richness',
main='Rarefaction Curve')
legend(
'bottomright',
legend=c('mean','2.5%','97.5%'),
lty=c(1,2,3),col=c(1,2,3), inset=c(.1,.1))
matplot(
rare,
type='l',
xlab='# of sampling plots',
ylab='species richness',
main='Rarefaction Curve of Rare Moth Species')
legend(
'topright',
legend=c('mean','2.5%','97.5%'),
lty=c(1,2,3),col=c(1,2,3), inset=c(0,0))
moths<-rarefaction_sampler(moths[, -1], 10000)
moths <- rarefaction_sampler(moths[, -1],10000)
moths <- rarefaction_sampler(moth_dat, 10000)
View(rarefaction_sampler)
View(moths)
maths <- rarefaction_sampler(moth_dat, 10000)
maths <- rarefaction_sampler(moth_dat, 10000)
rare_mean = apply(maths, 2, mean)
rare_quant = apply(maths, 2, quantile, probs=c(0.025, 0.975))
rare = t(rbind(rare_mean, rare_quant))
matplot(
+     rare,
+     type='l',
+     xlab='# of sampling plots',
+     ylab='species richness',
+     main='Rarefaction Curve for Rare Moth Species Richness')
legend(
+     'topright',
+     legend=c('mean','2.5%','97.5%'),
+     lty=c(1,2,3),col=c(1,2,3), inset=c(0,0))
maths <- rarefaction_sampler(moth_dat, 10000)
rare_mean = apply(maths, 2, mean)
rare_quant = apply(maths, 2, quantile, probs=c(0.025, 0.975))
rare = t(rbind(rare_mean, rare_quant))
rarefaction_sampler(moths[,-1], 10000)
maths <rarefaction_sampler(moth_dat, 10000)
maths <- rarefaction_sampler(moth_dat, 10000)
rare_mean = apply(maths, 2, mean)
rare_quant = apply(maths, 2, quantile, probs=c(0.025, 0.975))
rare = t(rbind(rare_mean, rare_quant))
matplot(
+     rare,
+     type='l',
+     xlab='# of sampling plots',
+     ylab='species richness',
+     main='Rarefaction Curve for Rare Moth Species Richness')
legend(
+     'bottomright',
+     legend=c('mean','2.5%','97.5%'),
+     lty=c(1,2,3),col=c(1,2,3), inset=c(0,0))
matplot(+     rare,
+     type='l',
+     xlab='# of sampling plots',
+     ylab='species richness',
+     main='Rarefaction Curve for Rare Moth Species Richness')
legend(
+     'bottomright',
+     legend=c('mean','2.5%','97.5%'),
+     lty=c(1,2,3),col=c(1,2,3), inset=c(0,0))
matplot(
rare,
type='l',
xlab='# of sampling plots',
ylab='species richness',
main='Rarefaction Curve for Rare Moth Species Richness')
legend(
'bottomright',
legend=c('mean','2.5%','97.5%'),
lty=c(1,2,3),col=c(1,2,3), inset=c(0,0))
matplot(
rare,
type='l',
xlab='# of sampling plots',
ylab='species richness',
main='Rarefaction Curve for Rare Moth Species Richness')
legend(
'bottomright',
legend=c('mean','2.5%','97.5%'),
lty=c(1,2,3),col=c(1,2,3), inset=c(0.1,0.1))
dat_ade = droplevels(subset(penguins, species == "Adelie"))
hist(dat_ade$body_mass_g, main = "Adelie Penguins: Body Mass", xlab = "body mass (g)")
t.test(x = dat_ade$body_mass_g, y = dat_ade$sex,
alternative = "two.sided",
mu = (mean(dat_ade$body_mass_g)), paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
mean(dat_ade$body_mass_g)
mean(na.omit(dat_ade))
mean(na.omit(dat_ade$body_mass_g))
t.test(x = dat_ade$body_mass_g, y = dat_ade$sex,
alternative = "two.sided",
mu = 3700.662, paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
t.test(x = na.omit(dat_ade$body_mass_g), y = na.omit(dat_ade$sex),
alternative = "two.sided",
mu = 3700.662, paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
males <- na.omit(dat_ade$body_mass_g ~ (dat_ade$sex = "male"))
split.data.frame(dat_ade, dat_ade$sex)
males <- dat_ade$males
males <- split.data.frame(dat_ade, dat_ade$sex)
View(males)
male <- males$male
female <- males$female
t.test(male, female,
alternative = two-sided,
mu = 3700.662,
conf.level = 0.95)
t.test(male, female,
alternative = "two-sided",
mu = 3700.662,
conf.level = 0.95)
t.test(male, female,
alternative = "two.sided",
mu = 3700.662,
conf.level = 0.95)
t.test(male, female,
alternative = "greater",
mu = 3700.662,
conf.level = 0.95)
View(male)
View(male)
m <- male$body_mass_g
f <- female$body_mass_g
t.test(m, f, alternative = "two.sided", mu = 3700.662, conf.level = 0.95)
t.test(m, f, alternative = "two.sided", mu = 0, conf.level = 0.95)
t.test(m, f, alternative = "greater", mu = 3700.662, conf.level = 0.95)
t.test(m, f, alternative = "greater", mu = 0, conf.level = 0.95)
t.test(m, f, alternative = "greater", mu = 4000, conf.level = 0.95)
t.test(f, m, alternative = "greater", mu = 0, conf.level = 0.95)
t.test(m, f, alternative = "greater", mu = 0, conf.level = 0.95)
